{"version":3,"sources":["components/images/lotus.jpg","redux/actions/gameStateActions.js","redux/reducers/gameStateReducer.js","redux/index.js","js-sdk/fire.js","components/Card.js","components/NavigationBar.js","components/Sidebar.js","components/GameArea.js","js-sdk/sdk.js","components/Hand.js","containers/GameContainer.js","components/LandingPage.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","types","UPDATE_PLAYER","UPDATE_ZONE","gameStateActions","updatePlayer","playerName","playerData","dispatch","type","payload","updateZone","zoneName","zoneData","initialState","Players","player1","life","Zones","zone1","card1","state.tapped","state.owner","state.zone","card2","gameStateReducer","state","arguments","length","undefined","action","gameActions","newPlayers","Object","objectSpread","combineReducers","gameState","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","settings","timestampsInSnapshots","Card","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","url","popoverOpen","toggle","bind","assertThisInitialized","isCreature","setState","$","popover","_this2","power","console","log","String","toughness","react_default","a","createElement","reactstrap_es","fluid","className","style","overflow-y","overflow-x","font-size","xs","tabIndex","color","size","data-toggle","data-trigger","title","name","data-content","id","textOverflow","overflow","block","cost","text-overflow","flex-basis","minHeight","maxHeight","obj","alt","src","image","max-height","value","set","text","flexBasis","divider","data","jsonObj","mana_cost","image_uris","art_crop","type_line","oracle_text","responsePromise","_callee","response","regenerator_default","wrap","_context","prev","next","Axios","get","sent","abrupt","t0","error","stop","parseScryfallData","React","Component","NavigationBar","isActive","isOpen","active","light","expand","navbar","toggler","pills","horizontal","href","nav","inNavbar","caret","right","Sidebar","GameArea","lordyUrl","player","top_row","bottom_row","increment","decrement","toggleCard","card","doc","concat","update","defineProperty","sdk","x","Number","fetchCard","getScryFallCardInfo","cardInfo","arr","slice","push","components_NavigationBar","outline","onClick","Fragment","map","min-width","components_Card","components_Sidebar","_this3","Hand","connect","bindActionCreators","cards","generateSevenCards","Boolean","window","location","hostname","match","ReactDOM","render","components_Hand","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2LAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sKCAlCC,EAAQ,CACZC,cAAe,gBACfC,YAAa,eAwBAC,EAAA,CACbH,QACAI,aAvBmB,SAACC,EAAYC,GAAb,OAA4B,SAACC,GAChDA,EAAS,CACPC,KAAMR,EAAMC,cACZQ,QAAS,CACPJ,WAAYA,EACZC,WAAYA,OAmBhBI,WAdiB,SAACL,EAAYM,EAAUC,GAAvB,OAAoC,SAACL,GACtDA,EAAS,CACPC,KAAMR,EAAME,YACZO,QAAS,CACPJ,WAAYA,EACZM,SAAUA,EACVC,SAAUA,QClBVC,EAAe,CACnBC,QAAS,CACPC,QAAS,CACPC,KAAM,GACNC,MAAO,CACLC,MAAO,CACLC,MAAO,CACLC,gBAAgB,EAChBC,cAAe,UACfC,aAAc,SAEhBC,MAAO,CACLH,gBAAgB,EAChBC,cAAe,UACfC,aAAc,cA+BXE,EAvBU,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBb,EAAcgB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,OAAQC,EAAOrB,MACb,KAAKsB,EAAY9B,MAAMC,cACrB,IAAI8B,EAAaN,EAAMX,QAEvB,OADAiB,EAAWF,EAAOpB,QAAQJ,YAA1B2B,OAAAC,EAAA,EAAAD,CAAA,GAA4CD,EAAWF,EAAOpB,QAAQJ,YAAgBwB,EAAOpB,QAAQH,YAC9F0B,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEX,QAASiB,IAGb,KAAKD,EAAY9B,MAAME,YACrB,IAAI6B,EAAaN,EAAMX,QAEvB,OADAiB,EAAWF,EAAOpB,QAAQJ,YAAYY,MAAMY,EAAOpB,QAAQE,UAAYkB,EAAOpB,QAAQG,SAC/EoB,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEX,QAASiB,IAGb,QACE,OAAON,ICzCES,YAAgB,CAC7BC,UAAWX,uGCQAY,UAAMC,IAASC,cATf,CACTC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,kBAInBC,EAAKR,IAASS,UAAUV,GAE5BS,EAAGE,SAAS,CACRC,uBAAuB,IAGZH,yEC2SAI,cA/Sb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAJ,IACjBE,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAqB,KAAArB,OAAAuB,EAAA,EAAAvB,CAAAiB,GAAAO,KAAAH,KAAMH,KAQRO,IACE,kFARAN,EAAK1B,MAAQ,CACXiC,aAAa,GAEfP,EAAKQ,OAASR,EAAKQ,OAAOC,KAAZ5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAmB,KACdA,EAAKW,WAAaX,EAAKW,WAAWF,KAAhB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAmB,KANDA,wEAuDjBE,KAAKU,SAAS,CACZL,aAAcL,KAAK5B,MAAMiC,0DAK3BM,IAAE,WACAA,IAAE,2BAA2BC,YAE/BZ,KAAKS,kDAGM,IAAAI,EAAAb,KACPA,KAAKH,MAAMiB,OACbC,QAAQC,IAAI,aACZhB,KAAKU,SAAS,SAAAtC,GAAK,MAAK,CACtBqC,WAAYQ,OAAOJ,EAAKhB,MAAMiB,MAAQ,IAAMD,EAAKhB,MAAMqB,gBAGzDH,QAAQC,IAAI,sBACZhB,KAAKU,SAAS,SAAAtC,GAAK,MAAK,CACtBqC,WAAY,oDAMhB,OACEU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,4GACVC,MAAO,CACLC,aAAc,OACdC,aAAc,WAIhBR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,+HACVC,MAAO,CACLG,YAAa,QAIfT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,IACHL,UAAU,+CAEVL,EAAAC,EAAAC,cAAA,UACES,SAAS,IACT3E,KAAK,SACL4E,MAAM,OACNC,KAAK,KACLR,UAAU,4HACVS,cAAY,UACZC,eAAa,QACbC,MAAOnC,KAAKH,MAAMuC,KAClBC,eAAcrC,KAAKH,MAAMuC,KACzBE,GAAG,UACHb,MAAO,CACLc,aAAc,WACdC,SAAU,WAGXxC,KAAKH,MAAMuC,OAKhBjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,IACHL,UAAU,kDAEVL,EAAAC,EAAAC,cAAA,UACES,SAAS,IACT3E,KAAK,SACL4E,MAAM,OACNC,KAAK,KACLS,OAAK,EACLjB,UAAU,2IACVS,cAAY,UACZC,eAAa,QACbC,MAAOnC,KAAKH,MAAMuC,KAClBC,eAAcrC,KAAKH,MAAM6C,KACzBJ,GAAG,UACHb,MAAO,CACLkB,gBAAiB,WACjBH,SAAU,SACVZ,YAAa,UAGd5B,KAAKH,MAAM6C,QAKlBvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,wFACVC,MAAO,CACLmB,aAAc,MACdC,UAAW,MACXC,UAAW,MACXN,SAAU,WAGZrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKO,GAAG,KAAKL,UAAU,2BACrBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyB,KAAG,EACHvB,UAAU,qEACVwB,IAAI,WACJC,IAAKjD,KAAKH,MAAMqD,UAMtB/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,gFACVC,MAAO,CACLG,YAAa,OACbgB,aAAc,MACdO,aAAc,QAIhBhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,8GACVC,MAAO,CACLmB,aAAc,MACdJ,SAAU,WAGZrB,EAAAC,EAAAC,cAAA,UACES,SAAS,IACT3E,KAAK,SACL4E,MAAM,OACNU,OAAK,EACLT,KAAK,KACLR,UAAU,4IACVS,cAAY,UACZC,eAAa,QACbG,eAAcrC,KAAKH,MAAM1C,KACzBmF,GAAG,UACHc,MAAOpD,KAAKH,MAAM1C,KAClBsE,MAAO,CACLkB,gBAAiB,WACjBH,SAAU,WAGXxC,KAAKH,MAAM1C,OAGhBgE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,+EACVC,MAAO,CACLmB,aAAc,MACdJ,SAAU,WAIZrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyB,KAAG,EACHvB,UAAU,0DACVwB,IAAI,YACJC,IAAKjD,KAAKH,MAAMwD,IAChB5B,MAAO,CACL0B,aAAc,YAOtBhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,0EACVC,MAAO,CACLG,YAAa,QACbgB,aAAc,QACdO,aAAc,UAGhBhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,iEAEVL,EAAAC,EAAAC,cAAA,UACES,SAAS,IACT3E,KAAK,SACL4E,MAAM,OACNU,OAAK,EACLT,KAAK,KACLR,UAAU,0HACVS,cAAY,UACZC,eAAa,QACbC,MAAOnC,KAAKH,MAAMuC,KAClBC,eAAcrC,KAAKH,MAAMyD,KACzBhB,GAAG,UACHb,MAAO,CACLkB,gBAAiB,WACjBH,SAAU,WAGXxC,KAAKH,MAAMyD,QAKlBnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,sGACVC,MAAO,CACLe,SAAU,SACVe,UAAW,QACX3B,YAAa,QACbuB,aAAc,UAGhBhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,sFACbL,EAAAC,EAAAC,cAAA,UACES,SAAS,IACT3E,KAAK,SACL4E,MAAM,OACNU,OAAK,EACLT,KAAK,KACLR,UAAU,kIACVS,cAAY,UACZC,eAAa,QACbC,MAAOnC,KAAKH,MAAMuC,KAClBC,eAAcrC,KAAK5B,MAAMqC,WACzB6B,GAAG,UACHb,MAAO,CACLkB,gBAAiB,WACjBH,SAAU,WAIXxC,KAAKH,MAAMiB,MACXd,KAAKH,MAAM2D,QACXxD,KAAKH,MAAMqB,UACXD,yDAzRYwC,GACvB,GAAIA,EAAM,CACR,IAAIC,EAAUD,EAqBd,MAVe,CAVJC,EAAQtB,KACHsB,EAAQC,UACCD,EAAQE,WAAWC,SAC5BH,EAAQI,UAGtB,iCAFQJ,EAAQL,IAEyB,kBACzBK,EAAQK,YACdL,EAAQ5C,MACJ4C,EAAQxC,gGAeKd,kFACzB4D,wCAAkB,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAA/C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEGC,IAAMC,IAAIrE,GAFb,cAEd8D,EAFcG,EAAAK,KAAAL,EAAAM,OAAA,SAGbT,EAAST,MAHI,cAAAY,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAKpBtD,QAAQ8D,MAARR,EAAAO,IALoBP,EAAAM,OAAA,SAMb,MANa,yBAAAN,EAAAS,SAAAb,EAAAjE,KAAA,0EAULgE,kBAAbP,2BACC7D,EAAKmF,kBAAkBtB,8GApDfuB,IAAMC,WCyIVC,sBAnIb,SAAAA,EAAYrF,GAAO,IAAAC,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAkF,IACjBpF,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAqB,KAAArB,OAAAuB,EAAA,EAAAvB,CAAAuG,GAAA/E,KAAAH,KAAMH,KACDS,OAASR,EAAKQ,OAAOC,KAAZ5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAmB,KACdA,EAAKqF,SAAWrF,EAAKqF,SAAS5E,KAAd5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAmB,KAEhBA,EAAK1B,MAAQ,CACXgH,QAAQ,EACRC,OAAQ,eAPOvF,wEAYjBE,KAAKU,SAAS,CACZ0E,QAASpF,KAAK5B,MAAMgH,0CAIfhD,GACP,GAAIpC,KAAKH,MAAMwF,SAAWjD,EACxB,MAAO,0CAQT,OACEjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,iBAGVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgE,OAAK,EACLC,OAAO,KACP/D,UAAU,sEAEVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,uBACVc,GAAG,YAELnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgE,OAAK,EACL9D,UAAU,YAFZ,2BAOAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkE,QAAM,EACNhE,UAAU,OACViE,QAAQ,YAGRtE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,UACVgE,QAAM,EACNE,OAAK,EACLC,YAAU,GAGVxE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsE,KAAK,eACLpE,UAAWxB,KAAKmF,SAAS,SAF3B,SAQFhE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsE,KAAK,IACLpE,UAAWxB,KAAKmF,SAAS,gBAF3B,gBAQFhE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuE,KAAG,EACHC,UAAQ,GAGR3E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuE,KAAG,EACHE,OAAK,GAFP,WAOA5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0E,OAAK,GAGL7E,EAAAC,EAAAC,cAACC,EAAA,EAAD,gBAIAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,iBAIAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,iBAIAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkC,SAAO,IAGTrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,2BAjHU2D,cCyFbgB,sBAjGb,SAAAA,EAAYpG,GAAQ,OAAAlB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAiG,GAAAtH,OAAAsB,EAAA,EAAAtB,CAAAqB,KAAArB,OAAAuB,EAAA,EAAAvB,CAAAsH,GAAA9F,KAAAH,KACZH,0EAIN,OACEsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,8DAGVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,+DAIVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,cAGVL,EAAAC,EAAAC,cAAA,MACEG,UAAU,6BACVC,MACE,CACEG,YAAa,QAJnB,SAcFT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,cAGVL,EAAAC,EAAAC,cAAA,MACEG,UAAU,6BACVC,MACE,CACEG,YAAa,QAJnB,UAcFT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,cAGVL,EAAAC,EAAAC,cAAA,MACEG,UAAU,6BACVC,MACE,CACEG,YAAa,QAJnB,UAcFT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,cAGVL,EAAAC,EAAAC,cAAA,MACEG,UAAU,6BACVC,MACE,CACEG,YAAa,QAJnB,qBA/EUqD,cCmWPiB,cApVb,SAAAA,EAAYrG,GAAO,IAAAC,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAkG,IACjBpG,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAqB,KAAArB,OAAAuB,EAAA,EAAAvB,CAAAuH,GAAA/F,KAAAH,KAAMH,KAJRsG,SACE,kFAIArG,EAAK1B,MAAQ,CACXgI,OAAQ,UACRzI,KAAM,EACN0I,QAAS,GACTC,WAAY,IAGdxG,EAAKyG,UAAYzG,EAAKyG,UAAUhG,KAAf5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAmB,KACjBA,EAAK0G,UAAY1G,EAAK0G,UAAUjG,KAAf5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAmB,KACjBA,EAAK2G,WAAa3G,EAAK2G,WAAWlG,KAAhB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAmB,KAXDA,0EAcR4G,GACLA,EAAK,gBCXN,SAAeA,GACpB,IAAI1J,EAAa0J,EAAK,eAClBpJ,EAAWoJ,EAAK,cACpBA,EAAK,iBAAkB,EACvBlH,EAAGmH,IAAH,uBAAAC,OAA8B5J,EAA9B,WAAA4J,OAAkDtJ,IAC/CuJ,OADHlI,OAAAmI,EAAA,EAAAnI,CAAA,GAEK+H,EAAKpE,GAAKoE,IDMXK,CAAUL,GCtBT,SAAaA,GAClB,IAAI1J,EAAa0J,EAAK,eAClBpJ,EAAWoJ,EAAK,cACpBA,EAAK,iBAAkB,EACvBlH,EAAGmH,IAAH,uBAAAC,OAA8B5J,EAA9B,WAAA4J,OAAkDtJ,IAC/CuJ,OADHlI,OAAAmI,EAAA,EAAAnI,CAAA,GAEK+H,EAAKpE,GAAKoE,IDmBXK,CAAQL,qCAIFM,GACRhH,KAAKU,SAAS,CACZ/C,KAAMsJ,OAAOjH,KAAK5B,MAAMT,MAAQsJ,OAAOD,uCAIjCA,GACRhH,KAAKU,SAAS,CACZ/C,KAAMsJ,OAAOjH,KAAK5B,MAAMT,MAAQsJ,OAAOD,iDAKzChH,KAAKkH,UAAUlH,KAAKmG,UACpBnG,KAAKkH,UACH,+FAEFlH,KAAKkH,UACH,+FAEFlH,KAAKkH,UACH,+FAEFlH,KAAKkH,UACH,+FAEFlH,KAAKkH,UACH,+FAEFlH,KAAKkH,UACH,+FAEFlH,KAAKkH,UACH,+FAEFlH,KAAKkH,UACH,yKAIY9G,yFACSR,EAAKuH,oBAAoB/G,UAA1CgH,SACNpH,KAAKU,SAAS,SAAAtC,GACZ,IAAIiJ,EAAMjJ,EAAMiI,QAAQiB,QAExB,OADAD,EAAIE,KAAKH,GACF,CACLf,QAASgB,yIAKN,IAAAxG,EAAAb,KACP,OACEmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,iEAEVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,wEACVC,MAAO,CACLmB,aAAc,MACdJ,SAAU,SAGZrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,UACVC,MAAO,CACLmB,aAAc,SAGhBzB,EAAAC,EAAAC,cAACmG,EAAD,CAAe7J,KAAMqC,KAAK5B,MAAMT,KAAM0H,OAAO,iBAG/ClE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKO,GAAG,IAAIL,UAAU,6BACpBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,8BACbL,EAAAC,EAAAC,cAAA,oBADF,IACkBF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,IAAIxB,KAAK5B,MAAMT,OAE/CwD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKO,GAAG,KAAKL,UAAU,iBACrBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaE,UAAU,SAASQ,KAAK,MACnCb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmG,SAAO,EACP1F,MAAM,UACN2F,QAAS,SAAAtJ,GAAK,OAAIyC,EAAK0F,UAAU,IACjCpJ,KAAK,UAJP,MAQAgE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmG,SAAO,EACP1F,MAAM,UACN2F,QAAS,SAAAtJ,GAAK,OAAIyC,EAAK2F,UAAU,IACjCrJ,KAAK,SACLsF,OAAK,GALP,QAWJtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,iBACbL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaE,UAAU,SAASQ,KAAK,MACnCb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmG,SAAO,EACP1F,MAAM,UACN2F,QAAS,SAAAtJ,GAAK,OAAIyC,EAAK0F,UAAU,IACjCpJ,KAAK,UAJP,MAQAgE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmG,SAAO,EACP1F,MAAM,SACN2F,QAAS,SAAAtJ,GAAK,OAAIyC,EAAK2F,UAAU,IACjCrJ,KAAK,SACLsF,OAAK,GALP,WAeVtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,UAAU,uEACVC,MAAO,CACLmB,aAAc,QAGhBzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,+DAGVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,6CAGVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,wDAEbL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,4GAEVL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuG,SAAA,KACG3H,KAAK5B,MAAMiI,QAAQuB,IAAI,SAAAR,GACtB,OACEjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,IACHJ,MAAO,CACLoG,YAAa,OACb1E,aAAc,OAEhB3B,UAAU,cAEVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,2BAEVL,EAAAC,EAAAC,cAACyG,EAAD,CACE1F,KAAMgF,EAAS,GACf1E,KAAM0E,EAAS,GACflE,MAAOkE,EAAS,GAChBjK,KAAMiK,EAAS,GACf/D,IAAK+D,EAAS,GACd9D,KAAM8D,EAAS,GACftG,MAAOsG,EAAS,GAChB5D,QAAS4D,EAAS,GAAK,IAAM,GAC7BlG,UAAWkG,EAAS,MAGxBjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,IACHL,UAAU,kCAUxBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,2DACbL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,kGAEZL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuG,SAAA,KACK3H,KAAK5B,MAAMiI,QAAQuB,IAAI,SAAAR,GACtB,OACEjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,IACHJ,MAAO,CACLoG,YAAa,OACb1E,aAAc,OAEhB3B,UAAU,cAEVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,KACHL,UAAU,2BAEVL,EAAAC,EAAAC,cAACyG,EAAD,CACE1F,KAAMgF,EAAS,GACf1E,KAAM0E,EAAS,GACflE,MAAOkE,EAAS,GAChBjK,KAAMiK,EAAS,GACf/D,IAAK+D,EAAS,GACd9D,KAAM8D,EAAS,GACftG,MAAOsG,EAAS,GAChB5D,QAAS4D,EAAS,GAAK,IAAM,GAC7BlG,UAAWkG,EAAS,MAGxBjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,IACHL,UAAU,oCAW5BL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKO,GAAG,IAAIL,UAAU,uBACpBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,UAAU,2DAEVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,+DACbL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,qEACbL,EAAAC,EAAAC,cAAC0G,EAAD,gDAWd,OACE5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,UAAU,0CACnBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,oBAAd,cACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,oBAAb,uEAMQ,IAAAwG,EAAAhI,KACd,OACEmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,iBACbL,EAAAC,EAAAC,cAAA,oBADF,IACkBF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,IAAIxB,KAAK5B,MAAMT,OAE/CwD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKO,GAAG,KAAKL,UAAU,iBACrBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaE,UAAU,SAASQ,KAAK,MACnCb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmG,SAAO,EACP1F,MAAM,UACN2F,QAAS,SAAAtJ,GAAK,OAAI4J,EAAKzB,UAAU,IACjCpJ,KAAK,UAJP,MAQAgE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmG,SAAO,EACP1F,MAAM,UACN2F,QAAS,SAAAtJ,GAAK,OAAI4J,EAAKxB,UAAU,IACjCrJ,KAAK,SACLsF,OAAK,GALP,QAWJtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,iBACbL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaE,UAAU,SAASQ,KAAK,MACnCb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmG,SAAO,EACP1F,MAAM,UACN2F,QAAS,SAAAtJ,GAAK,OAAI4J,EAAKzB,UAAU,IACjCpJ,KAAK,UAJP,MAQAgE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmG,SAAO,EACP1F,MAAM,SACN2F,QAAS,SAAAtJ,GAAK,OAAI4J,EAAKxB,UAAU,IACjCrJ,KAAK,SACLsF,OAAK,GALP,gBAnUWwC,aEyGRgD,GChHOC,YARE,SAAC9J,GAAD,OAAAO,OAAAC,EAAA,EAAAD,CAAA,GACnBP,IAGsB,SAAClB,GAAD,MAAe,CACxCuB,YAAa0J,YAAmBrL,EAAkBI,KAG9BgL,CAA6ChC,sBDDjE,SAAA+B,EAAYpI,GAAO,IAAAC,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAiI,IACjBnI,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAqB,KAAArB,OAAAuB,EAAA,EAAAvB,CAAAsJ,GAAA9H,KAAAH,KAAMH,KACDzB,MAAQ,CACXgK,MAAO,IAETtI,EAAKuI,mBAAqBvI,EAAKuI,mBAAmB9H,KAAxB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAmB,KAC1BA,EAAKoH,UAAYpH,EAAKoH,UAAU3G,KAAf5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAmB,KANAA,iHAUHM,yFACSR,EAAKuH,oBAAoB/G,UAA1CgH,SACNpH,KAAKU,SAAS,SAAAtC,GACZ,IAAIiJ,EAAMjJ,EAAMgK,MAAMd,QAEtB,OADAD,EAAIE,KAAKH,GACF,CACLgB,MAAOf,qJAMX,IAAIe,EAAQ,GA8CZ,OA7CAA,EAAMb,KACJvH,KAAKkH,UACH,oFAGJkB,EAAMb,KACJvH,KAAKkH,UACH,gGAGJkB,EAAMb,KACJvH,KAAKkH,UACH,gGAGJkB,EAAMb,KACJvH,KAAKkH,UACH,gGAGJkB,EAAMb,KACJvH,KAAKkH,UACH,gGAGJkB,EAAMb,KACJvH,KAAKkH,UACH,gGAGJkB,EAAMb,KACJvH,KAAKkH,UACH,gGAGJkB,EAAMb,KACJvH,KAAKkH,UACH,gGAGJkB,EAAMb,KACJvH,KAAKkH,UACH,gGAGGkB,8CAIPpI,KAAKqI,sDAIL,OACElH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,sCACzBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKE,UAAU,6BACfC,MAAO,CAACqB,UAAW,SAChB9C,KAAK5B,MAAMgK,MAAMR,IAAI,SAAAR,GACpB,OACEjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,GAAG,IACHJ,MAAO,CACLoG,YAAa,OACb1E,aAAc,QAEhB3B,UAAU,0BAEVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKO,GAAG,KAAKL,UAAU,2BACrBL,EAAAC,EAAAC,cAACyG,EAAD,CACE1F,KAAMgF,EAAS,GACf1E,KAAM0E,EAAS,GACflE,MAAOkE,EAAS,GAChBjK,KAAMiK,EAAS,GACf/D,IAAK+D,EAAS,GACd9D,KAAM8D,EAAS,GACftG,MAAOsG,EAAS,GAChB5D,QAAS4D,EAAS,GAAK,IAAM,GAC7BlG,UAAWkG,EAAS,MAGxBjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKO,GAAG,IAAIL,UAAU,wCAxGnBwD,IAAMC,mBETCA,YCSNqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,yECENC,IAASC,OAOPzH,EAAAC,EAAAC,cAACwH,EAAD,MACAC,SAASC,eAAe,SDqGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fdb5fde2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lotus.31156b9b.jpg\";","const types = {\n  UPDATE_PLAYER: 'UPDATE_PLAYER',\n  UPDATE_ZONE: 'UPDATE_ZONE'\n};\n\nconst updatePlayer = (playerName, playerData) => (dispatch) => {\n  dispatch({\n    type: types.UPDATE_PLAYER,\n    payload: {\n      playerName: playerName,\n      playerData: playerData\n    },\n  });\n};\n\nconst updateZone = (playerName, zoneName, zoneData) => (dispatch) => {\n  dispatch({\n    type: types.UPDATE_ZONE,\n    payload: {\n      playerName: playerName,\n      zoneName: zoneName,\n      zoneData: zoneData\n    },\n  });\n};\n\nexport default {\n  types,\n  updatePlayer,\n  updateZone\n};\n","import gameActions from '../actions/gameStateActions';\n\n//TODO make a complete initial state\nconst initialState = {\n  Players: {\n    player1: {\n      life: 40,\n      Zones: {\n        zone1: {\n          card1: {\n            \"state.tapped\": false,\n            \"state.owner\": \"player1\",\n            \"state.zone\": \"zone1\"\n          },\n          card2: {\n            \"state.tapped\": false,\n            \"state.owner\": \"player1\",\n            \"state.zone\": \"zone1\"\n          }\n        }\n      }\n    }\n  }\n};\n\nconst gameStateReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case gameActions.types.UPDATE_PLAYER: {\n      let newPlayers = state.Players\n      newPlayers[action.payload.playerName] = {...newPlayers[action.payload.playerName], ...action.payload.playerData};\n      return {\n        ...state,\n        Players: newPlayers\n      };\n    }\n    case gameActions.types.UPDATE_ZONE: {\n      let newPlayers = state.Players\n      newPlayers[action.payload.playerName].Zones[action.payload.zoneName] = action.payload.zoneData\n      return {\n        ...state,\n        Players: newPlayers\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default gameStateReducer;\n","import { combineReducers } from 'redux';\nimport gameStateReducer from './reducers/gameStateReducer';\n\nexport default combineReducers({\n  gameState: gameStateReducer,\n});\n","import firebase from 'firebase'\nimport 'firebase/firestore'\n\nvar config = {\n    apiKey: \"AIzaSyD-ZDutz248kz-PYKtJ7oEGQe6wNWVm6qU\",\n    authDomain: \"mystic-get-together.firebaseapp.com\",\n    databaseURL: \"https://mystic-get-together.firebaseio.com\",\n    projectId: \"mystic-get-together\",\n    storageBucket: \"mystic-get-together.appspot.com\",\n    messagingSenderId: \"847755874279\"\n};\n\nexport const app = firebase.initializeApp(config);\nvar db = firebase.firestore(app);\n\ndb.settings({\n    timestampsInSnapshots: true\n});\n\nexport default db;\nexport const FIREBASE_FUNCTION_BASE_URL = '';\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport \"../styles/Card.css\";\n\nimport \"bootstrap/dist/js/bootstrap.bundle.js\";\nimport $ from \"jquery\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Media\n} from 'reactstrap';\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popoverOpen: false\n    };\n    this.toggle = this.toggle.bind(this);\n    this.isCreature = this.isCreature.bind(this);\n  }\n\n  url =\n    \"https://api.scryfall.com/cards/1d9d8732-9ff2-42e4-bdfc-723cb6a76969?format=json\";\n\n  static parseScryfallData(data) {\n    if (data) {\n      var jsonObj = data;\n      var name = jsonObj.name;\n      var mana_cost = jsonObj.mana_cost;\n      var image_uri_art_crop = jsonObj.image_uris.art_crop;\n      var type_line = jsonObj.type_line;\n      var set = jsonObj.set;\n      var set_image =\n        \"https://img.scryfall.com/sets/\" + set + \".svg?1545627600\";\n      var oracle_text = jsonObj.oracle_text;\n      var power = jsonObj.power;\n      var toughness = jsonObj.toughness;\n      var cardInfo = [\n        name,\n        mana_cost,\n        image_uri_art_crop,\n        type_line,\n        set_image,\n        oracle_text,\n        power,\n        toughness\n      ];\n      return cardInfo;\n    }\n  }\n\n  static async getScryFallCardInfo(url) {\n    const responsePromise = async () => {\n      try {\n        const response = await Axios.get(url);\n        return response.data;\n      } catch (e) {\n        console.error(e);\n        return null;\n      }\n    };\n\n    const data = await responsePromise();\n    return Card.parseScryfallData(data);\n  }\n\n  toggle() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    });\n  }\n\n  componentDidMount() {\n    $(function() {\n      $('[data-toggle=\"popover\"]').popover();\n    });\n    this.isCreature();\n  }\n\n  isCreature() {\n    if (this.props.power) {\n      console.log(\"has power\");\n      this.setState(state => ({\n        isCreature: String(this.props.power + \"/\" + this.props.toughness)\n      }));\n    } else {\n      console.log(\"doesn't have power\");\n      this.setState(state => ({\n        isCreature: \"non-creature\"\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        fluid\n        className=\"card-container d-flex flex-column justify-content-center mh-100 h-100 mw-100 w-100 border rounded p-0 m-0\"\n        style={{\n          \"overflow-y\": \"auto\",\n          \"overflow-x\": \"hidden\"\n        }}\n      >\n        {/* Card name and mana cost row */}\n        <Row\n          className=\"card-name-cost-row d-inline-flex flex-nowrap mw-100 no-gutters flex-nowrap justify-content-between flex-grow-0 flex-shrink-0\"\n          style={{\n            \"font-size\": \"1vw\"\n          }}\n        >\n          {/* Card name */}\n          <Col\n            xs=\"7\"\n            className=\"card-name-col p-0 m-0 justify-content-start\"\n          >\n            <button\n              tabIndex=\"0\"\n              type=\"button\"\n              color=\"link\"\n              size=\"sm\"\n              className=\"card-name-pop text-dark font-weight-bold bg-transparent m-0 p-0 align-top text-left text-nowrap mh-100 h-100 mw-100 w-100\"\n              data-toggle=\"popover\"\n              data-trigger=\"focus\"\n              title={this.props.name}\n              data-content={this.props.name}\n              id=\"Popover\"\n              style={{\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\"\n              }}\n            >\n              {this.props.name}\n            </button>\n          </Col>\n\n          {/* Mana cost */}\n          <Col\n            xs=\"5\"\n            className=\"card-mana-cost-col p-0 m-0 justify-content-end\"\n          >\n            <button\n              tabIndex=\"0\"\n              type=\"button\"\n              color=\"link\"\n              size=\"sm\"\n              block\n              className=\"card-cost-pop text-dark font-weight-bold bg-transparent m-0 p-0 justify-end align-start text-right text-nowrap mh-100 h-100 w-100 mw-100\"\n              data-toggle=\"popover\"\n              data-trigger=\"focus\"\n              title={this.props.name}\n              data-content={this.props.cost}\n              id=\"Popover\"\n              style={{\n                \"text-overflow\": \"ellipsis\",\n                overflow: \"hidden\",\n                \"font-size\": \".75vw\"\n              }}\n            >\n              {this.props.cost}\n            </button>\n          </Col>\n        </Row>\n        {/* Image row with a col wrapper to control size of image */}\n        <Row\n          className=\"card-art-row justify-content-center mw-100 w-100 no-gutters flex-grow-1 flex-shrink-1\"\n          style={{\n            \"flex-basis\": \"40%\",\n            minHeight: \"40%\",\n            maxHeight: \"80%\",\n            overflow: \"hidden\"\n          }}\n        >\n          <Col xs=\"12\" className=\"card-art-col p-0 mh-100\">\n            <Media\n              obj\n              className=\"card-art-image img-fluid d-block mx-auto h-100 mh-100 w-100 mw-100\"\n              alt=\"Card Art\"\n              src={this.props.image}\n            />\n          </Col>\n        </Row>\n\n        {/* Row for type and set logo */}\n        <Row\n          className=\"card-type-set-row justify-content-around no-gutters flex-grow-1 flex-shrink-5\"\n          style={{\n            \"font-size\": \".5vw\",\n            \"flex-basis\": \"1vw\",\n            \"max-height\": \"1vw\"\n          }}\n        >\n          {/* Card type */}\n          <Col\n            className=\"card-type-col d-flex flex-grow-10 flex-shrink-1 align-items-center px-0 h-100 mh-100 mw-100 w-100 text-left\"\n            style={{\n              \"flex-basis\": \"50%\",\n              overflow: \"hidden\"\n            }}\n          >\n            <button\n              tabIndex=\"0\"\n              type=\"button\"\n              color=\"link\"\n              block\n              size=\"sm\"\n              className=\"card-type-pop text-dark font-weight-bold bg-transparent m-0 p-0 align-items-start align-top text-left text-wrap mh-100 h-100 mw-100 w-100\"\n              data-toggle=\"popover\"\n              data-trigger=\"focus\"\n              data-content={this.props.type}\n              id=\"Popover\"\n              value={this.props.type}\n              style={{\n                \"text-overflow\": \"ellipsis\",\n                overflow: \"hidden\"\n              }}\n            >\n              {this.props.type}\n            </button>\n          </Col>\n          <Col\n            className=\"flex-shrink-10 set-image-col align-items-baseline flex-grow-1 p-0 m-0 mh-100\"\n            style={{\n              \"flex-basis\": \"10%\",\n              overflow: \"hidden\"\n            }}\n          >\n            {/* Card set image */}\n            <Media\n              obj\n              className=\"set-image img-fluid d-block mx-auto align-self-baseline\"\n              alt=\"Set Image\"\n              src={this.props.set}\n              style={{\n                \"max-height\": \"100%\"\n              }}\n            />\n          </Col>\n        </Row>\n\n        {/* Card text */}\n        <Row\n          className=\"card-text-row no-gutters align-items-stretch flex-grow-1 flex-shrink-10\"\n          style={{\n            \"font-size\": \".75vw\",\n            \"flex-basis\": \"1.5vw\",\n            \"max-height\": \"1.5vw\"\n          }}\n        >\n          <Col\n            xs=\"12\"\n            className=\"card-text-col d-flex align-items-stretch mh-100 h-100 m-0 p-0\"\n          >\n            <button\n              tabIndex=\"0\"\n              type=\"button\"\n              color=\"link\"\n              block\n              size=\"sm\"\n              className=\"card-text-pop text-dark font-weight-bold bg-transparent m-0 p-0 align-top text-left text-wrap mh-100 h-100 mw-100 w-100\"\n              data-toggle=\"popover\"\n              data-trigger=\"focus\"\n              title={this.props.name}\n              data-content={this.props.text}\n              id=\"Popover\"\n              style={{\n                \"text-overflow\": \"ellipsis\",\n                overflow: \"hidden\"\n              }}\n            >\n              {this.props.text}\n            </button>\n          </Col>\n        </Row>\n        {/* Power and toughness if creature */}\n        <Row\n          className=\"card-power-toughness-row d-inline-flex no-gutters justify-content-between flex-grow-1 flex-shrink-0\"\n          style={{\n            overflow: \"hidden\",\n            flexBasis: \"1.4vw\",\n            \"font-size\": \".75vw\",\n            \"max-height\": \"1.5vw\",\n          }}\n        >\n          <Col className=\"card-power-toughness-col px-0 d-flex flex-shrink-0 flex-grow-2 justify-content-end\">\n            <button\n              tabIndex=\"0\"\n              type=\"button\"\n              color=\"link\"\n              block\n              size=\"sm\"\n              className=\"card-power-toughness text-dark font-weight-bold bg-transparent m-0 p-0 align-top text-right text-wrap mh-100 h-100 mw-100 w-100\"\n              data-toggle=\"popover\"\n              data-trigger=\"focus\"\n              title={this.props.name}\n              data-content={this.state.isCreature}\n              id=\"Popover\"\n              style={{\n                \"text-overflow\": \"ellipsis\",\n                overflow: \"hidden\"\n              }}\n            >\n              {/* Don't forget to add the divider when inputing power and toughness */}\n              {this.props.power}\n              {this.props.divider}\n              {this.props.toughness}\n              {String()}\n            </button>\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\n\nimport '../styles/NavigationBar.css';\n\nimport {\n  Container,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledCollapse\n} from 'reactstrap';\n\nclass NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.isActive = this.isActive.bind(this);\n\n    this.state = {\n      isOpen: false,\n      active: \"battlefield\"\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  isActive(name) {\n    if (this.props.active === name) {\n      return \"active\";\n    }\n\n    return;\n  }\n\n\n  render() {\n    return (\n      <Container\n        fluid\n        className=\"h-100 p-0 m-0\"\n      >\n\n        <Navbar\n          light\n          expand=\"lg\"\n          className=\"bg-light mh-100 h-100 w-100 mw-100 m-0 p-1 justify-content-between\"\n        >\n          <NavbarToggler\n            className=\"mh-100 h-100 m-0 p-0\"\n            id=\"toggler\"\n          />\n          <NavbarBrand\n            light\n            className=\"bg-light\"\n          >\n            Mystic-The-Get-Together\n          </NavbarBrand>\n\n          <UncontrolledCollapse\n            navbar\n            className=\"pb-1\"\n            toggler=\"#toggler\"\n          >\n\n            <Nav\n              className=\"ml-auto\"\n              navbar\n              pills\n              horizontal\n            >\n\n              <NavItem>\n                <NavLink\n                  href=\"/components/\"\n                  className={this.isActive(\"hand\")}\n                >\n                  Hand\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"#\"\n                  className={this.isActive(\"battlefield\")}\n                >\n                  Battlefield\n                </NavLink>\n              </NavItem>\n\n              <UncontrolledDropdown\n                nav\n                inNavbar\n              >\n\n                <DropdownToggle\n                  nav\n                  caret\n                >\n                  Options\n\t\t\t\t\t\t\t\t</DropdownToggle>\n\n                <DropdownMenu\n                  right\n                >\n\n                  <DropdownItem>\n                    Anthony\n\t\t\t\t\t\t\t\t\t</DropdownItem>\n\n                  <DropdownItem>\n                    Option 1\n\t\t\t\t\t\t\t\t\t</DropdownItem>\n\n                  <DropdownItem>\n                    Option 2\n\t\t\t\t\t\t\t\t\t</DropdownItem>\n\n                  <DropdownItem\n                    divider\n                  />\n\n                  <DropdownItem>\n                    Reset\n\t\t\t\t\t\t\t    </DropdownItem>\n\n                </DropdownMenu>\n\n              </UncontrolledDropdown>\n\n            </Nav>\n\n          </UncontrolledCollapse>\n\n        </Navbar>\n\n      </Container>\n    );\n  }\n}\n\nexport default NavigationBar;","import React, { Component } from 'react';\n\nimport '../styles/Sidebar.css';\n\nimport {\n  Container,\n  Row,\n  Col\n} from 'reactstrap';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Container\n        fluid\n        className=\"d-flex sidebar-container mh-100 h-100 mw-100 w-100 p-0 m-0\"\n      >\n        \n        <Row\n          className=\"justify-start sidebar-row mh-100 h-100 mw-100 w-100 p-0 m-0\"\n        >\n\n          {/* Exile */}\n          <Col\n            xs=\"12\"\n            className=\"border p-1\"\n          >\n            \n            <h6\n              className=\"font-weight-bold text-wrap\"\n              style={\n                {\n                  \"font-size\": \"50%\"\n                }\n              }\n            >\n              Hand\n            </h6>\n\n          </Col>\n\n          {/* Graveyard */}\n          <Col\n            xs=\"12\"\n            className=\"border p-1\"\n          >\n            \n            <h6\n              className=\"font-weight-bold text-wrap\"\n              style={\n                {\n                  \"font-size\": \"50%\"\n                }\n              }\n            >\n              Exile\n            </h6>\n\n          </Col>\n\n          {/* Hand */}\n          <Col\n            xs=\"12\"\n            className=\"border p-1\"\n          >\n            \n            <h6\n              className=\"font-weight-bold text-wrap\"\n              style={\n                {\n                  \"font-size\": \"50%\"\n                }\n              }\n            >\n              Grave\n            </h6>\n\n          </Col>\n\n          {/* Library */}\n          <Col\n            xs=\"12\"\n            className=\"border p-1\"\n          >\n            \n            <h6\n              className=\"font-weight-bold text-wrap\"\n              style={\n                {\n                  \"font-size\": \"50%\"\n                }\n              }\n            >\n              Library\n            </h6>\n\n          </Col>\n        </Row>\n\n      </Container >\n    );\n  }\n}\n\nexport default Sidebar;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as sdk from '../js-sdk/sdk';\n\nimport \"../styles/GameArea.css\";\nimport Card from \"./Card.js\";\nimport \"../styles/Card.css\";\n\nimport NavigationBar from './NavigationBar';\nimport Sidebar from './Sidebar';\n\nimport {\n  Jumbotron,\n  Container,\n  Row,\n  Col,\n  Button,\n  ButtonGroup\n} from \"reactstrap\";\n\nclass GameArea extends Component {\n  lordyUrl =\n    \"https://api.scryfall.com/cards/1d9d8732-9ff2-42e4-bdfc-723cb6a76969?format=json\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      player: \"Anthony\",\n      life: 0,\n      top_row: [],\n      bottom_row: []\n    };\n\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.toggleCard = this.toggleCard.bind(this);\n  }\n\n  toggleCard(card) {\n    if (card[\"state.tapped\"]) {\n      sdk.untap(card)\n    }\n    else {\n      sdk.tap(card)\n    }\n  }\n\n  increment(x) {\n    this.setState({\n      life: Number(this.state.life) + Number(x)\n    });\n  }\n\n  decrement(x) {\n    this.setState({\n      life: Number(this.state.life) - Number(x)\n    });\n  }\n\n  componentDidMount() {\n    this.fetchCard(this.lordyUrl);\n    this.fetchCard(\n      \"https://api.scryfall.com/cards/cc61a398-cf16-415b-b3cf-897217dc7cc9?format=json&pretty=true\"\n    );\n    this.fetchCard(\n      \"https://api.scryfall.com/cards/e16e4f85-9611-4d5f-a7d9-4a5961dd7182?format=json&pretty=true\"\n    );\n    this.fetchCard(\n      \"https://api.scryfall.com/cards/54a0afaa-f99f-4c7a-9fa1-c6a46dfb2a29?format=json&pretty=true\"\n    );\n    this.fetchCard(\n      \"https://api.scryfall.com/cards/086a0591-718f-4a33-a5f5-e9265468c3ad?format=json&pretty=true\"\n    );\n    this.fetchCard(\n      \"https://api.scryfall.com/cards/3ed39bd7-d059-4a44-9f03-0f628dcdb119?format=json&pretty=true\"\n    );\n    this.fetchCard(\n      \"https://api.scryfall.com/cards/b0e0ef27-3db2-4976-b9db-13e3d7cd795d?format=json&pretty=true\"\n    );\n    this.fetchCard(\n      \"https://api.scryfall.com/cards/544a06f8-75fe-41b6-81dc-c9a0358f03c5?format=json&pretty=true\"\n    );\n    this.fetchCard(\n      \"https://api.scryfall.com/cards/06750380-a9a9-4ab4-a03b-d4d35a31132a?format=json&pretty=true\"\n    );\n  }\n  // Fetch a card given it's scryfall api url.\n  async fetchCard(url) {\n    const cardInfo = await Card.getScryFallCardInfo(url);\n    this.setState(state => {\n      var arr = state.top_row.slice();\n      arr.push(cardInfo);\n      return {\n        top_row: arr\n      };\n    });\n  }\n\n  render() {\n    return (\n      <Container\n        fluid\n        className=\"main-container d-flex flex-column vh-100 mh-100 w-100 p-0 m-0\"\n      >\n        <Row\n          className=\"top-bar-row-wrapper p-0 m-0 d-flex flex-row flex-grow-1 flex-shrink-1\"\n          style={{\n            \"flex-basis\": \"10%\",\n            overflow: \"auto\"\n          }}\n        >\n          <Col\n            xs=\"10\"\n            className=\"p-0 m-0\"\n            style={{\n              \"flex-basis\": \"100%\"\n            }}\n          >\n            <NavigationBar life={this.state.life} active=\"battlefield\" />\n          </Col>\n\n          <Col xs=\"2\" className=\"flex-grow-1 flex-shrink-1\">\n            <Row>\n              <Col className=\"d-inline-flex mh-100 h-100\">\n                <p5>Life: </p5> <p5 className=\"\">{this.state.life}</p5>\n              </Col>\n              <Col xs=\"12\" className=\"d-inline-flex\">\n                <ButtonGroup className=\"d-flex\" size=\"sm\">\n                  <Button\n                    outline\n                    color=\"success\"\n                    onClick={state => this.increment(1)}\n                    type=\"submit\"\n                  >\n                    +1\n                  </Button>\n                  <Button\n                    outline\n                    color=\"warning\"\n                    onClick={state => this.decrement(1)}\n                    type=\"submit\"\n                    block\n                  >\n                    -1\n                  </Button>\n                </ButtonGroup>\n              </Col>\n              <Col className=\"d-inline-flex\">\n                <ButtonGroup className=\"d-flex\" size=\"sm\">\n                  <Button\n                    outline\n                    color=\"primary\"\n                    onClick={state => this.increment(5)}\n                    type=\"submit\"\n                  >\n                    +5\n                  </Button>\n                  <Button\n                    outline\n                    color=\"danger\"\n                    onClick={state => this.decrement(5)}\n                    type=\"submit\"\n                    block\n                  >\n                    -5\n                  </Button>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n        <Row\n          className=\"cards-sidebar-row-wrapper flex-row flex-grow-5 flex-shrink-1 p-0 m-0\"\n          style={{\n            \"flex-basis\": \"90%\"\n          }}\n        >\n          <Col\n            xs=\"10\"\n            className=\"battlefield-col p-0 m-0 flex-grow-1 flex-shrink-1 flex-wrap\"\n          >\n            {/* Battlefield area. Battlefield is split into two rows. Top and bottom. */}\n            <Container\n              fluid\n              className=\"cards-rows-container mh-100 h-100 p-0 m-0\"\n            >\n              {/* Top row of battlefield */}\n              <Row className=\"top-cards-row mh-50 h-50 mw-100 w-100 p-0 m-0 border\">\n                {/* Main area for cards */}\n                <Col\n                  xs=\"12\"\n                  className=\"top-cards-row-col d-flex flex-wrap justify-content-start flex-shrink-1 mh-100 h-100 mw-100 w-100 p-0 m-0\"\n                >\n                  <>\n                    {this.state.top_row.map(cardInfo => {\n                      return (\n                        <Col\n                          xs=\"2\"\n                          style={{\n                            \"min-width\": \"80px\",\n                            \"max-height\": \"50%\"\n                          }}\n                          className=\"no-gutters\"\n                        >\n                          <Col\n                            xs=\"11\"\n                            className=\"mh-100 h-100 no-gutters\"\n                          >\n                            <Card\n                              name={cardInfo[0]}\n                              cost={cardInfo[1]}\n                              image={cardInfo[2]}\n                              type={cardInfo[3]}\n                              set={cardInfo[4]}\n                              text={cardInfo[5]}\n                              power={cardInfo[6]}\n                              divider={cardInfo[6] ? \"/\" : \"\"}\n                              toughness={cardInfo[7]}\n                            />\n                          </Col>\n                          <Col\n                            xs=\"1\"\n                            className=\"mh-100 h-100 no-gutters\"\n                          />\n                        </Col>\n                      );\n                    })}\n                  </>\n                </Col>\n              </Row>\n\n              {/* Bottom row of cards */}\n              <Row className=\"bottom-cards-row mh-50 h-50 mw-100 w-100 p-0 m-0 border\">\n                <Col\n                  xs=\"12\"\n                  className=\"battlefield-bottom d-inline-flex flex-wrap justify-content-start card-row card-row-top m-0 p-0\"\n                >\n                <>\n                    {this.state.top_row.map(cardInfo => {\n                      return (\n                        <Col\n                          xs=\"2\"\n                          style={{\n                            \"min-width\": \"80px\",\n                            \"max-height\": \"50%\"\n                          }}\n                          className=\"no-gutters\"\n                        >\n                          <Col\n                            xs=\"11\"\n                            className=\"mh-100 h-100 no-gutters\"\n                          >\n                            <Card\n                              name={cardInfo[0]}\n                              cost={cardInfo[1]}\n                              image={cardInfo[2]}\n                              type={cardInfo[3]}\n                              set={cardInfo[4]}\n                              text={cardInfo[5]}\n                              power={cardInfo[6]}\n                              divider={cardInfo[6] ? \"/\" : \"\"}\n                              toughness={cardInfo[7]}\n                            />\n                          </Col>\n                          <Col\n                            xs=\"1\"\n                            className=\"mh-100 h-100 no-gutters\"\n                          />\n                        </Col>\n                      );\n                    })}\n                  </>\n                  </Col>\n              </Row>\n            </Container>\n          </Col>\n          {/* Sidebar for exile,graveyard,hand,library  */}\n          <Col xs=\"2\" className=\"sidebar-col p-0 m-0\">\n            <Container\n              fluid\n              className=\"sidebar-col-container mh-100 h-100 mw-100 w-100 p-0 m-0\"\n            >\n              <Row className=\"sidebar-col-container-row mh-100 h-100 mw-100 w-100 p-0 m-0\">\n                <Col className=\"side-bar-col-container-row-col w-100 mw-100 flex-shrink-3 p-0 m-0\">\n                  <Sidebar />\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  mainTitle() {\n    return (\n      <Jumbotron className=\"d-none d-sm-flex mh-100 pt-0 pb-0 mb-0\">\n        <div className=\"mh-100\">\n          <h6 className=\"display-5 mh-100\">Main Board</h6>\n          <p className=\"d-none d-sm-flex\">View of your battlefield.</p>\n        </div>\n      </Jumbotron>\n    );\n  }\n\n  lifeComponent() {\n    return (\n      <Row>\n        <Col className=\"d-inline-flex\">\n          <h5>Life: </h5> <h5 className=\"\">{this.state.life}</h5>\n        </Col>\n        <Col xs=\"12\" className=\"d-inline-flex\">\n          <ButtonGroup className=\"d-flex\" size=\"sm\">\n            <Button\n              outline\n              color=\"success\"\n              onClick={state => this.increment(1)}\n              type=\"submit\"\n            >\n              +1\n            </Button>\n            <Button\n              outline\n              color=\"warning\"\n              onClick={state => this.decrement(1)}\n              type=\"submit\"\n              block\n            >\n              -1\n            </Button>\n          </ButtonGroup>\n        </Col>\n        <Col className=\"d-inline-flex\">\n          <ButtonGroup className=\"d-flex\" size=\"sm\">\n            <Button\n              outline\n              color=\"primary\"\n              onClick={state => this.increment(5)}\n              type=\"submit\"\n            >\n              +5\n            </Button>\n            <Button\n              outline\n              color=\"danger\"\n              onClick={state => this.decrement(5)}\n              type=\"submit\"\n              block\n            >\n              -5\n            </Button>\n          </ButtonGroup>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nGameArea.propTypes = {\n  gameState: PropTypes.shape({}).isRequired,\n  gameActions: PropTypes.shape({}).isRequired\n};\n\nexport default GameArea;\n","import db, { FIREBASE_FUNCTION_BASE_URL } from './fire.js';\nimport axios from 'axios';\n\n// Listeners\nexport function listenToZone(player, zone, callback) {\n  db.doc(`Games/game1/Players/${player}/Zones/${zone}`)\n    .onSnapshot((doc) => {\n      callback(doc.data())\n    });\n}\n\nexport function listenToPlayer(player, callback) {\n  db.doc(`Games/game1/Players/${player}`)\n    .onSnapshot((doc) => {\n      callback(doc.data())\n    });\n}\n\n// Game functions\nexport function tap(card) {\n  var playerName = card[\"state.owner\"];\n  var zoneName = card[\"state.zone\"];\n  card[\"state.tapped\"] = true\n  db.doc(`Games/game1/Players/${playerName}/Zones/${zoneName}`)\n    .update({\n      [card.id]: card\n    })\n}\n\nexport function untap(card) {\n  var playerName = card[\"state.owner\"];\n  var zoneName = card[\"state.zone\"];\n  card[\"state.tapped\"] = false\n  db.doc(`Games/game1/Players/${playerName}/Zones/${zoneName}`)\n    .update({\n      [card.id]: card\n    })\n}\n\nexport function updateLife(player, newLife) {\n  db.doc(`Games/game1/Players/${player}`)\n    .update({\n      life: newLife\n    })\n}\n\n// Methods for interacting with Cloud Functions\n// TODO: Once we get Firebase Auth setup, we should convert our Functions\n// to Callables (https://firebase.google.com/docs/functions/callable) and use\n// the Firebase provided mechanism to call them, which will handle auth with\n// the Function\n\n/**\n * This wraps the 'importDeckFunction', which imports a deck from MTGGoldfish\n * for the given player.\n *\n * @param {string} player The name of the player, e.g. eric\n * @param {string} uri The uri of the deck, e.g. https://www.mtggoldfish.com/deck/1325288\n *\n * @returns nothing\n */\nexport async function importDeck(player, uri) {\n  await axios.post(`${FIREBASE_FUNCTION_BASE_URL}/importDeckFunction`, {\n    params: {\n        player,\n        uri\n    }\n  });\n  return;\n}\n\n/**\n * This wraps the 'parseDeckFunction', which parses a deck from MTGGoldfish.\n *\n * @param {string} uri The uri of the deck, e.g. https://www.mtggoldfish.com/deck/1325288\n *\n * @returns The parsed deck\n */\nexport async function parseDeck(uri) {\n  const response = await axios.post(`${FIREBASE_FUNCTION_BASE_URL}/parseDeckFunction`, {\n    params: {\n        uri\n    }\n  });\n  return response.data;\n}\n\n/**\n * This wraps the 'populateDeckFunction', which returns bulk Scryfall data\n * for a deck.\n *\n * @param {string} player The name of the player, e.g. eric\n * @param {string} deckId The ID of the deck belonging to the given player\n * @param {...any} include If provided, filter the Scryfall data to only include\n * the named fields. Dot notation is supported.\n *\n * @returns Bulk data for all cards in the specified deck\n */\nexport async function populateDeck(player, deckId, ...include) {\n  const response = await axios.post(`${FIREBASE_FUNCTION_BASE_URL}/populateDeckFunction`, {\n    params: {\n        player,\n        deckId,\n        ...include && { include }\n    }\n  });\n  return response.data;\n}\n\n/**\n * This wraps the 'hostGameFunction', which creates a new game containing\n * the specified player, with her board state initialized using the specified\n * deck.\n *\n * @param {string} player The name of the player, e.g. eric\n * @param {string} deckId The ID of the deck belonging to the given player\n *\n * @returns {string} The game ID\n */\nexport async function hostGame(player, deckId) {\n  const response = await axios.post(`${FIREBASE_FUNCTION_BASE_URL}/hostGameFunction`, {\n    params: {\n        player,\n        deckId\n    }\n  });\n  return response.headers['x-gameid'];\n}\n\n/**\n * This wraps the 'joinGameFunction', which joins an existing game by adding\n * the specified player, intializing her board state using the specified deck.\n *\n * @param {string} gameId The game ID, as returned by 'hostGame'\n * @param {string} player The name of the player, e.g. eric\n * @param {string} deckId The ID of the deck belonging to the given player\n *\n * @returns nothing\n */\nexport async function joinGame(gameId, player, deckId) {\n  await axios.post(`${FIREBASE_FUNCTION_BASE_URL}/joinGameFunction`, {\n    params: {\n        gameId,\n        player,\n        deckId\n    }\n  });\n  return;\n}\n\n/**\n * This wraps the 'startGameFunction', which starts the game by setting the\n * 'turn_order' attribute on the Game.\n *\n * @param {string} gameId The game ID, as returned by 'hostGame'\n *\n * @returns nothing\n */\nexport async function startGame(gameId) {\n  await axios.post(`${FIREBASE_FUNCTION_BASE_URL}/startGameFunction`, {\n    params: {\n        gameId\n    }\n  });\n  return;\n}\n","import React, { Component } from \"react\";\nimport \"../styles/Hand.css\";\nimport Card from \"./Card\";\nimport {\n  Jumbotron,\n  Container,\n  Row,\n  Col,\n  Button,\n  ButtonGroup\n} from \"reactstrap\";\n\nclass Hand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: []\n    };\n    this.generateSevenCards = this.generateSevenCards.bind(this);\n    this.fetchCard = this.fetchCard.bind(this);\n  }\n\n  // Fetch a card given it's scryfall api url.\n  async fetchCard(url) {\n    const cardInfo = await Card.getScryFallCardInfo(url);\n    this.setState(state => {\n      var arr = state.cards.slice();\n      arr.push(cardInfo);\n      return {\n        cards: arr\n      };\n    });\n  }\n\n  generateSevenCards() {\n    var cards = [];\n    cards.push(\n      this.fetchCard(\n        \"https://api.scryfall.com/cards/1d9d8732-9ff2-42e4-bdfc-723cb6a76969?format=json\"\n      )\n    );\n    cards.push(\n      this.fetchCard(\n        \"https://api.scryfall.com/cards/cc61a398-cf16-415b-b3cf-897217dc7cc9?format=json&pretty=true\"\n      )\n    );\n    cards.push(\n      this.fetchCard(\n        \"https://api.scryfall.com/cards/e16e4f85-9611-4d5f-a7d9-4a5961dd7182?format=json&pretty=true\"\n      )\n    );\n    cards.push(\n      this.fetchCard(\n        \"https://api.scryfall.com/cards/54a0afaa-f99f-4c7a-9fa1-c6a46dfb2a29?format=json&pretty=true\"\n      )\n    );\n    cards.push(\n      this.fetchCard(\n        \"https://api.scryfall.com/cards/086a0591-718f-4a33-a5f5-e9265468c3ad?format=json&pretty=true\"\n      )\n    );\n    cards.push(\n      this.fetchCard(\n        \"https://api.scryfall.com/cards/3ed39bd7-d059-4a44-9f03-0f628dcdb119?format=json&pretty=true\"\n      )\n    );\n    cards.push(\n      this.fetchCard(\n        \"https://api.scryfall.com/cards/b0e0ef27-3db2-4976-b9db-13e3d7cd795d?format=json&pretty=true\"\n      )\n    );\n    cards.push(\n      this.fetchCard(\n        \"https://api.scryfall.com/cards/544a06f8-75fe-41b6-81dc-c9a0358f03c5?format=json&pretty=true\"\n      )\n    );\n    cards.push(\n      this.fetchCard(\n        \"https://api.scryfall.com/cards/06750380-a9a9-4ab4-a03b-d4d35a31132a?format=json&pretty=true\"\n      )\n    );\n    return cards;\n  }\n\n  componentDidMount() {\n    this.generateSevenCards();\n  }\n\n  render() {\n    return (\n      <Container fluid className=\"hand-parent-container mh-100 h-100\">\n        <Row className=\"hand-container flex-nowrap\"\n        style={{maxHeight: \"100%\"}}>\n          {this.state.cards.map(cardInfo => {\n            return (\n              <Col\n                xs=\"4\"\n                style={{\n                  \"min-width\": \"80px\",\n                  \"max-height\": \"100%\"\n                }}\n                className=\"no-gutters flex-nowrap\"\n              >\n                <Col xs=\"11\" className=\"mh-100 h-100 no-gutters\">\n                  <Card\n                    name={cardInfo[0]}\n                    cost={cardInfo[1]}\n                    image={cardInfo[2]}\n                    type={cardInfo[3]}\n                    set={cardInfo[4]}\n                    text={cardInfo[5]}\n                    power={cardInfo[6]}\n                    divider={cardInfo[6] ? \"/\" : \"\"}\n                    toughness={cardInfo[7]}\n                  />\n                </Col>\n                <Col xs=\"1\" className=\"mh-100 h-100 no-gutters\" />\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Hand;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport GameArea from '../components/GameArea';\nimport gameStateActions from '../redux/actions/gameStateActions';\n\nconst mapStateToProps = (state) => ({\n  ...state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  gameActions: bindActionCreators(gameStateActions, dispatch),\n});\n\nconst GameContainer = connect(mapStateToProps, mapDispatchToProps)(GameArea);\n\nexport default GameContainer;\n","import React, { Component } from 'react';\nimport '../styles/LandingPage.css';\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div>\n        <img src={require('../components/images/lotus.jpg')} alt=\"lotus\" className=\"lotus\" />\n        <div>\n          <h1 className=\"mystic\">Mystic The Get-Together</h1>\n          <div className=\"buttonsAndSelect\">\n            <a className=\"btn\" href=\"/\">Host Game</a>\n            <a className=\"btn\" href=\"/\">Join Game</a>\n            <a className=\"btn\" href=\"/\">Show Deck</a>\n            <select>\n              <option selected disabled>Select User</option>\n              <option value=\"\">Andrew</option>\n              <option value=\"\">Anthony</option>\n              <option value=\"\">Eric</option>\n              <option value=\"\">Henry</option>\n              <option value=\"\">Jake</option>\n              <option value=\"\">Khalid</option>\n              <option value=\"\">Priyanka</option>\n              <option value=\"\">Vincent</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\n\nimport GameContainer from './containers/GameContainer';\nimport Hand from './components/Hand';\nimport LandingPage from './components/LandingPage';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nconst app = () => (\n  <Provider store={configureStore()}>\n    <GameContainer />\n  </Provider>\n);\n\nReactDOM.render(\n  // <Router>\n  //   <div>\n  //     <Route exact path=\"/landingPage\" component={LandingPage} />\n  //     <Route exact path=\"/\" component={app} />\n  //   </div>\n  // </Router>,\n  <Hand></Hand>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}